<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Boshe.rs</title>
  <subtitle>Site of Nashville Front-End Developer, Jeff Boshers</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://boshe.rs/"/>
  <updated>2016-10-14T02:59:21.000Z</updated>
  <id>http://boshe.rs/</id>
  
  <author>
    <name>Jeff Boshers</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Building a Standing Desk</title>
    <link href="http://boshe.rs/building-a-standing-desk/"/>
    <id>http://boshe.rs/building-a-standing-desk/</id>
    <published>2015-06-29T05:00:00.000Z</published>
    <updated>2016-10-14T02:59:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>In June, I planned some time off between leaving my agency job at <a href="http://gsandf.com" target="_blank" rel="external">GS&amp;F</a> and starting at <a href="http://brightbytes.net" target="_blank" rel="external">Bright Bytes</a>. What’s a geek to do with time on his hands? Build a desk, that’s what!</p>
<p>I figured on using readily available pipe since I didn’t have access to a miter saw. I wanted to buy everything at one big box store and be done with it. Besides, those industrial pipe desks look so damn chic. The list for my <em>final</em> build is as follows:</p>
<h4 id="Black-Iron-1”-Pipe"><a href="#Black-Iron-1”-Pipe" class="headerlink" title="Black Iron 1” Pipe"></a>Black Iron 1” Pipe</h4><ul>
<li>6 T-joints</li>
<li>4 flanges</li>
<li>4 end caps</li>
<li>2 1-inch extensions</li>
<li>3 couplings for the 1-inch extension</li>
<li>4 6-inch nipples</li>
<li>4 4-inch nipples</li>
<li>4 36-inch pieces</li>
<li>1 24-inch piece</li>
<li>1 18-inch piece</li>
</ul>
<h5 id="The-Hardware"><a href="#The-Hardware" class="headerlink" title="The Hardware"></a>The Hardware</h5><ul>
<li>16 3x3/8 bolts</li>
<li>16 3/8 washers</li>
<li>16 3/8 nuts</li>
</ul>
<h4 id="Mah-Tools"><a href="#Mah-Tools" class="headerlink" title="Mah Tools"></a>Mah Tools</h4><ul>
<li>Standard battery powered drill</li>
<li>Pipe Wrench</li>
<li>ViseGrips</li>
<li>Various grits of sandpaper</li>
</ul>
<h2 id="Let’s-Talk-About-Pipe"><a href="#Let’s-Talk-About-Pipe" class="headerlink" title="Let’s Talk About Pipe"></a>Let’s Talk About Pipe</h2><p>Now at your box store of choice, you will no doubt run into two different options for pipe. The options are “black iron” and “galvanized” pipe. I chose the most pragmatic choice… <em>The cheaper of the two</em>. So most of my desk is black iron with a smattering of galvanized.</p>
<h3 id="To-Thread-Or-Thread-Not"><a href="#To-Thread-Or-Thread-Not" class="headerlink" title="To Thread Or Thread Not"></a>To Thread Or Thread Not</h3><p>I read a lot of plan online that used kee-klamps. These clamps removed the need of threading the pipe together. It made the desks somewhat adjustable too.</p>
<p>Queue the sad trombone, the box store didn’t carry those clamps.</p>
<h2 id="How-I-Put-My-Desk-Together"><a href="#How-I-Put-My-Desk-Together" class="headerlink" title="How I Put My Desk Together"></a>How I Put My Desk Together</h2><p>With all of the parts laid out, the task ahead looked really cool. <em>I’ll admit now I made some mistakes. I’ll cover those near the end. So some of the pictures may not be the way things turned out.</em></p>
<p>I started by making the cross members. I attached one t-joint to one of the 1-inch extensions and 1-inch coupling.</p>
<p>After making both cross member pieces, I started on the legs. I screwed the endcap into the 8-inch nipple then into the t-joint. <em>I later swapped out the 8-inch pieces for 4-inch nipples.</em></p>
<p>I attached the legs to the cross members with the 6-inch nipples.</p>
<p><em>At this point I realized I made the base too wide. So I removed one of the 1-inch extensions and couples.</em></p>
<p>I used a coupling to connect the two remaining pipes (24-inch, 18-inch) to make the full-length cross member. That rounded out the complete base.</p>
<p>From that point, I attached the upper legs to the base and attached the flanges to the top of the legs.</p>
<p>I turned it all upside down, took a pencil and made marks in the holes of the flanges. I drilled through the pencil marks. I attached the top to the base with the nuts and bolts.</p>
<p>Here’s the completed desk. It was one neat project to complete. I’ll probably end up swapping out the top with some hand-milled lumber, but right now the plywood is holding strong.</p>
]]></content>
    
    <summary type="html">
    
      In June, I planned some time off between leaving my agency job and starting at a startup. What&#39;s a geek to do with time on his hands? Build a desk, that&#39;s what!
    
    </summary>
    
      <category term="physical projects" scheme="http://boshe.rs/categories/physical-projects/"/>
    
    
      <category term="standing desk" scheme="http://boshe.rs/tags/standing-desk/"/>
    
  </entry>
  
  <entry>
    <title>Trying Out VIM</title>
    <link href="http://boshe.rs/using-vim/"/>
    <id>http://boshe.rs/using-vim/</id>
    <published>2015-06-15T00:00:00.000Z</published>
    <updated>2016-10-12T04:13:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Did it start out of boredom? It may have been the desire to be faster. Maybe it was the constant stream of tweets and blog posts about VIM. Could programming be quicker and simpler with VIM? I was stepping out on my editor (Sublime Text 2) and looking at the greener VIM grass.</p>
<h2 id="What-did-I-get-myself-into"><a href="#What-did-I-get-myself-into" class="headerlink" title="What did I get myself into?"></a>What did I get myself into?</h2><p>After reading about VIM and watching VIMcasts, shit got real. I made the “mistake” of talking about my intentions to a co-worker, Lori. Lori, ever the one for a new challenge threw down the gauntlet.</p>
<p><em>One week of using nothing but VIM.</em> <strong>No other editor.</strong></p>
<p>Could I do it?</p>
<p>I remembered back to the time when I was seven. My dad thought the way to teach was through immersion. That’s why I ended up in the Tennessee river; water over my head, trying not to drown. …But I learned how to swim, thanks Dad.</p>
<p>So I took a deep breath, printed <a href="http://www.viemu.com/vi-vim-cheat-sheet.gif" target="_blank" rel="external">this cheatsheet</a> out and fired up vim tutor. I started with the smallest .vimrc possible instead of a curated list of plugins. I disabled the arrow keys and imagined my mouse had caught ebola.</p>
<h2 id="It-was-a-bit-tough"><a href="#It-was-a-bit-tough" class="headerlink" title="It was a bit tough"></a>It was a bit tough</h2><p>Until the muscle memory kicked in, remembering all the commands slowed me down. Moving my hand to hit the escape key all the time added milliseconds to my game. Modes and leaders warped my brain a little bit. Thank goodness for team challenges! Every command I couldn’t remember I found on my cheatsheet or Lori would help me out.</p>
<p>I kept at it.</p>
<h2 id="It-did-get-better"><a href="#It-did-get-better" class="headerlink" title="It did get better"></a>It did get better</h2><p>Muscle memory finally kicked in. The commands that required more effort to do; I cheated a bit. I swapped the useless <em>caps lock</em> key out for the <em>left control</em> key. I used <a href="https://pqrs.org/osx/karabiner/" target="_blank" rel="external">Karabiner</a> to change some keys. I changed the <em>left control</em> to send the to the <em>escape</em> key unless combined with another key.</p>
<p>One week turned into one month. I got quicker. I enjoyed my editor for the first time since I found <a href="http://emmet.io/" target="_blank" rel="external">Emmet</a>. I started adding plugins into my .vimrc whenever I had a bottleneck or pain point.</p>
<h2 id="Going-forward"><a href="#Going-forward" class="headerlink" title="Going forward"></a>Going forward</h2><p>I’ve been dabbling with tmux for screen and window splits. I started using a bash script to setup projects. After a week, I switched over to tmuxinator since it didn’t play nice with <a href="http://fishshell.com/" target="_blank" rel="external">FISH shell</a>.</p>
<h2 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL:DR"></a>TL:DR</h2><p>I tried VIM and I liked it so much I wrote this. Give it a shot, maybe you will too.</p>
<h3 id="More-Resources"><a href="#More-Resources" class="headerlink" title="More Resources"></a>More Resources</h3><ul>
<li><a href="https://mikecoutermarsh.com/learning-vim-in-a-week/" target="_blank" rel="external">Learning VIM in a week</a> by Mike Coutermarsh</li>
<li><a href="http://yehudakatz.com/2010/07/29/everyone-who-tried-to-convince-me-to-use-vim-was-wrong/" target="_blank" rel="external">Everyone who tried to convince me to use VIM was wrong</a> by Yehuda Katz</li>
<li><a href="http://vimcasts.org/" target="_blank" rel="external">VIMCasts</a> by Drew Neil</li>
</ul>
]]></content>
    
    <summary type="html">
    
      Did it start out of boredom? It may have been the desire to be faster. Maybe it was the constant stream of tweets and blog posts about VIM. Could programming be quicker and simpler with VIM? I was stepping out on my editor (Sublime Text 2) and looking at the greener VIM grass.
    
    </summary>
    
    
      <category term="editors" scheme="http://boshe.rs/tags/editors/"/>
    
      <category term="VIM" scheme="http://boshe.rs/tags/VIM/"/>
    
      <category term="tools" scheme="http://boshe.rs/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>Being a Front-End Developer</title>
    <link href="http://boshe.rs/being-a-front-end-developer/"/>
    <id>http://boshe.rs/being-a-front-end-developer/</id>
    <published>2014-12-04T05:07:02.000Z</published>
    <updated>2016-08-11T02:13:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>The thing I dread most about old classmates and new acquaintances: explaining what I do for a living.  Usually it ends the same way; I generalize my profession as “computer programming” or “I work with computers”. Don’t get it twisted brothers and sisters of the web. I don’t lose sleep thinking about if I should put “developer” or “front-end web developer” on my doctor’s intake forms. I don’t fret over whether my doctor knows the difference either.</p>
<h2 id="So-What-is-a-Front-End-Developer"><a href="#So-What-is-a-Front-End-Developer" class="headerlink" title="So What is a Front-End Developer?"></a>So What is a Front-End Developer?</h2><p>Some folks use web designer, front-end developer, web developer, interaction/interactive developer interchangeably. There are even a few folks that throw user experience in the title somewhere, just to muddy the waters.</p>
<h3 id="We-Need-an-Elevator-Pitch"><a href="#We-Need-an-Elevator-Pitch" class="headerlink" title="We Need an Elevator Pitch"></a>We Need an Elevator Pitch</h3><p>An elevator pitch is the delivery of an idea in the time span of an elevator ride, or approximately thirty seconds to two minutes.</p>
<p><em>Is it possible to sum up my chosen profession in thirty seconds? I believe so.</em></p>
<p>I am a front-end web developer. I am responsible for the parts of web that you can see. I make beautiful, functional, and useful websites and applications. I strive for simple, efficient, and concise quality in the code I write.</p>
<h2 id="But-the-Devil-is-in-the-Details"><a href="#But-the-Devil-is-in-the-Details" class="headerlink" title="But the Devil is in the Details"></a>But the Devil is in the Details</h2><p>Most likely I’m “preaching to the converted”. You’re likely a developer or designer of some sort. I know what you’re thinking, so what’s the laundry list of things a front-end developer takes care of?</p>
<h3 id="Presentation"><a href="#Presentation" class="headerlink" title="Presentation"></a>Presentation</h3><p>Knowledge of semantic markup is a must. HTML rules everything around me. CSS has come a long way in recent years, the amount of things accomplished with it are amazing. Some folks think being a front-end developer stops right here.</p>
<h3 id="Interaction"><a href="#Interaction" class="headerlink" title="Interaction"></a>Interaction</h3><p>Knowledge of javascript is a must as well. In some settings, knowing only a bit of jquery will suffice. The more javascript a front-end developer knows the better.</p>
<h3 id="Accessibility"><a href="#Accessibility" class="headerlink" title="Accessibility"></a>Accessibility</h3><p>All front-end developers should be concerned with accessibility. Depending on a site’s user base, a large part could have a disability that makes normal web browsing difficult. Making sure the sites and apps we build are available across the most devices, to the most people, isn’t just good business sense. It’s common sense.</p>
<h3 id="Usability"><a href="#Usability" class="headerlink" title="Usability"></a>Usability</h3><p>This goes along with accessibility, keeping tabs on usability should be a priority for us as well. Making sure the site and apps feel good to a end user. Having well thought out feature sets. Keeping the end user’s goals and our (or the client’s) business goals in mind.</p>
<h3 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h3><p>We need to make sure these sites and apps load wicked fast. Making and maintaining performance budgets. Being frugal with http requests and code best practices to ensure load times are minimal.</p>
<p>I could rant on longer, but I want to work on my elevator pitch.</p>
]]></content>
    
    <summary type="html">
    
      The thing I dread most about old classmates and new acquaintances; explaining what I do for a living.  Usually it ends the same way; I generalize my profession as computer programming or I work with computers. Don&#39;t get it twisted brothers and sisters of the web.
    
    </summary>
    
    
      <category term="front-end dev" scheme="http://boshe.rs/tags/front-end-dev/"/>
    
      <category term="craft" scheme="http://boshe.rs/tags/craft/"/>
    
  </entry>
  
  <entry>
    <title>Principles of the Modern Web</title>
    <link href="http://boshe.rs/principles-of-modern-web/"/>
    <id>http://boshe.rs/principles-of-modern-web/</id>
    <published>2014-11-05T06:00:00.000Z</published>
    <updated>2016-08-04T04:09:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="The-Modern-Web-is-Simple"><a href="#The-Modern-Web-is-Simple" class="headerlink" title="The Modern Web is Simple."></a>The Modern Web is <em>Simple</em>.</h2><p>In design or in code, simplicity trumps all. What is clever and novel today is tomorrow’s technical debt.</p>
<h2 id="The-Modern-Web-is-Fast"><a href="#The-Modern-Web-is-Fast" class="headerlink" title="The Modern Web is Fast."></a>The Modern Web is <em>Fast</em>.</h2><p>The modern web thrives on speed. Design faster. Code faster. Ship faster. Fail faster.</p>
<h2 id="The-Modern-Web-is-Familiar"><a href="#The-Modern-Web-is-Familiar" class="headerlink" title="The Modern Web is Familiar."></a>The Modern Web is <em>Familiar</em>.</h2><p>Patterns made the modern web. Reuse code and design elements. Stop reinventing the wheel.</p>
<h2 id="The-Modern-Web-is-Accessible"><a href="#The-Modern-Web-is-Accessible" class="headerlink" title="The Modern Web is Accessible."></a>The Modern Web is <em>Accessible</em>.</h2><p>The modern web is for everyone; regardless of their abilities. Everyone should be able to find your cat website.</p>
<h2 id="The-Modern-Web-is-Agnostic"><a href="#The-Modern-Web-is-Agnostic" class="headerlink" title="The Modern Web is Agnostic."></a>The Modern Web is <em>Agnostic</em>.</h2><p>The modern web is like water, it will fit into any container you put it in. Plan for unimagined devices and uses by remaining adaptable and responsive.</p>
<h2 id="The-Modern-Web-is-Testable"><a href="#The-Modern-Web-is-Testable" class="headerlink" title="The Modern Web is Testable."></a>The Modern Web is <em>Testable</em>.</h2><p>Throwing shit at the walls to see what sticks; means that no matter what your walls are still covered in shit. Use the data available to you to design and develop, then test your data again. <em>Wash.Rinse.Repeat.</em></p>
<h2 id="The-Modern-Web-is-Iterative"><a href="#The-Modern-Web-is-Iterative" class="headerlink" title="The Modern Web is Iterative."></a>The Modern Web is <em>Iterative</em>.</h2><p>Design is never finished. The modern web is a moving, evolving platform.<br><em>Measure.Design.Deploy.Refine.</em></p>
]]></content>
    
    <summary type="html">
    
      Everything I think design and development should be.
    
    </summary>
    
    
      <category term="craft" scheme="http://boshe.rs/tags/craft/"/>
    
  </entry>
  
</feed>
